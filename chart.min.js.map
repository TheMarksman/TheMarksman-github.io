{"version":3,"sources":["chart.js"],"names":["Chart","regionAttribute","margin","top","right","bottom","left","dispatcher","d3","dispatch","pieRadius","bufferInnerRadius","bufferPadAngle","nudge","textArcPadAngle","defaultCharge","defaultGravity","defaultFriction","textRegionDistance","circlePadding","firstSortedByVariable","secondSortedByVariable","colorScheme","scale","category10","chart","selection","each","data","pathToPoints","path","segs","pathSegList","range","numberOfItems","map","i","getItem","x","y","tick","e","k","alpha","forEach","d","tx","center","cx","regionCentroids","inPoly","Math","sqrt","pow","pointInPolygon","regionPolygons","node","collide","attr","point","vs","inside","j","length","xi","yi","xj","yj","intersect","quadtree","geom","r","radius","nx1","nx2","ny1","ny2","visit","quad","x1","y1","x2","y2","l","dragstart","force","stop","container","select","this","width","clientWidth","height","clientHeight","chartWidth","chartHeight","barHeight","barToTextPadding","_","sortByOrder","barRegions","countBy","numberOfRegions","size","groupedByRegion","groupBy","yScalePoints","textPathRadius","pathLineLength","sin","PI","pathLine","pathCurve","yPosition","number","regionName","firstBar","lastBar","textLocation","ordinal","domain","selectedNode","regions","chain","uniq","value","circleRadius","pie","layout","arc","svg","innerRadius","outerRadius","arcRegion","padAngle","arcText","timelineLinesGenerator","line","regionYScale","interpolate","textLineGenerator","gravity","friction","charge","xScale","time","min","startDate","max","lastUpdate","nice","xAxis","axis","orient","append","style","barContainer","classed","timeline","x-axis","call","selectAll","region","enter","timeline-line","stroke","stroke-width","opacity","warning-text","text","region region-background","fill","centroid","textBackground","region text-background","text-background-arc","textGroup","text-translate","transform","text-rotate","display-text","dy","path-for-text","id","text-path","startOffset","xlink:href","text-anchor","actual-text-path","font-size","nodes","on","start","updateNode","theNode","kebabCase","name","clickedSameNode","mouseOver","thisCircle","mouseOverNode","mouseOut","mouseOutNode","transition","duration","rx","ry","drag","arcTransition","a","t0","t1","t2","delay","t3","attrTween","t4","stopForceDrag","timelineDrag","hideTextBackground","hidePieSlices","fillTextWithColor","intermediateTranslateToOrigin","originRotateText","modifyPathToLine","lineTransition","positionTextToFitOnPath","translateToOrigin","showTimeline","moveNodesToTimelinePosition","extendTimelineLines","extendNodeBars","ease","filters","viewable","filterListIsEmpty","isMuted","dataHasFilter","forIn","keptValues","filterType","isEmpty","allValues","JSON","stringify","values","toLowerCase","indexOf","isMatch","some","keptValue","isArray","others","other","every","isTrue","pointer-events","behavior","arguments"],"mappings":"AAIA,GAAIA,OAAQ,WACR,GAEIC,GAFAC,GAAUC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,EAAaC,GAAGC,WAEhBC,EAAY,IACZC,EAAoB,IACpBC,EAAiB,GACjBC,EAAQ,EACRC,EAAkB,KAClBC,EAAgB,WACZ,OAAQ,GAEZC,EAAiB,IACjBC,EAAkB,EAClBC,EAAqB,GACrBC,EAAgB,EAChBC,EAAwB,SACxBC,EAAyB,YACzBC,EAAcd,GAAGe,MAAMC,aAEvBC,EAAQ,SAASC,GACjBA,EAAUC,KAAK,SAASC,GA0MpB,QAASC,GAAaC,GAClB,GAAIC,GAAOD,EAAKE,WAChB,OAAOxB,IAAGyB,MAAMF,EAAKG,cAAgB,GAAGC,IAAI,SAASC,GACjD,OAAQL,EAAKM,QAAQD,GAAGE,EAAGP,EAAKM,QAAQD,GAAGG,KA8KnD,QAASC,GAAKC,GACZ,GAAIC,GAAI,GAAMD,EAAEE,KAEhBf,GAAKgB,QAAQ,SAASC,GACpB,GAAIC,IAAMD,EAAEP,EAAIS,EAAOT,EAAGO,EAAEN,EAAIQ,EAAOR,GACrCS,EAAKC,EAAgBJ,EAAE5C,IAMrBiD,GALGC,KAAKC,KACRD,KAAKE,IAAIP,EAAG,GAAKE,EAAG,GAAI,GACxBG,KAAKE,IAAIP,EAAG,GAAKE,EAAG,GAAI,IAGfM,EAAeR,EAAIS,EAAeV,EAAE5C,KAE7CiD,IAIFL,EAAEP,IAAMU,EAAG,GAAKF,EAAG,IAAMJ,EACzBG,EAAEN,IAAMS,EAAG,GAAKF,EAAG,IAAMJ,IAJzBG,EAAEP,IAAMQ,EAAG,GAAKE,EAAG,GAAK,EAAI,IAAMnC,EAClCgC,EAAEN,IAAMO,EAAG,GAAKE,EAAG,GAAK,EAAI,IAAMnC,KAOtC2C,GAAK7B,KAAK8B,EAAQ,KACfC,KAAK,IAAK,SAASb,GAAK,MAAOA,GAAEP,IACjCoB,KAAK,IAAK,SAASb,GAAK,MAAOA,GAAEN,IAMtC,QAASe,GAAeK,EAAOC,GAK3B,IAAK,GAHDtB,GAAIqB,EAAM,GAAIpB,EAAIoB,EAAM,GAExBE,GAAS,EACJzB,EAAI,EAAG0B,EAAIF,EAAGG,OAAS,EAAG3B,EAAIwB,EAAGG,OAAQD,EAAI1B,IAAK,CACvD,GAAI4B,GAAKJ,EAAGxB,GAAG,GAAI6B,EAAKL,EAAGxB,GAAG,GAC1B8B,EAAKN,EAAGE,GAAG,GAAIK,EAAKP,EAAGE,GAAG,GAE1BM,EACAH,EAAK1B,GAAO4B,EAAK5B,IACb2B,EAAKF,IAAOzB,EAAI0B,IAAOE,EAAKF,GAAMD,EAAvC1B,CAEC8B,KAAWP,GAAUA,GAG7B,MAAOA,GAKX,QAASJ,GAAQd,GACf,GAAI0B,GAAW7D,GAAG8D,KAAKD,SAASzC,EAChC,OAAO,UAASiB,GACd,GAAI0B,GAAI1B,EAAE2B,OAASrD,EACfsD,EAAM5B,EAAEP,EAAIiC,EACZG,EAAM7B,EAAEP,EAAIiC,EACZI,EAAM9B,EAAEN,EAAIgC,EACZK,EAAM/B,EAAEN,EAAIgC,CAChBF,GAASQ,MAAM,SAASC,EAAMC,EAAIC,EAAIC,EAAIC,GACxC,GAAIJ,EAAKnB,OAAUmB,EAAKnB,QAAUd,EAAI,CACpC,GAAIP,GAAIO,EAAEP,EAAIwC,EAAKnB,MAAMrB,EACrBC,EAAIM,EAAEN,EAAIuC,EAAKnB,MAAMpB,EACrB4C,EAAIhC,KAAKC,KAAKd,EAAIA,EAAIC,EAAIA,GAC1BgC,EAAI1B,EAAE2B,OAASM,EAAKnB,MAAMa,OAASrD,CAC/BoD,GAAJY,IACFA,GAAKA,EAAIZ,GAAKY,EAAIxC,EAClBE,EAAEP,GAAKA,GAAK6C,EACZtC,EAAEN,GAAKA,GAAK4C,EACZL,EAAKnB,MAAMrB,GAAKA,EAChBwC,EAAKnB,MAAMpB,GAAKA,GAGpB,MAAOwC,GAAKL,GAAYD,EAALQ,GAAYD,EAAKJ,GAAYD,EAALO,KAsXjD,QAASE,KACLC,EAAMC,OAzzBV,GAAIC,GAAY/E,GAAGgF,OAAOC,MACtBC,EAAQD,KAAKE,YACbC,EAASH,KAAKI,aACdC,EAAaJ,EAAQxF,EAAOI,KAAOJ,EAAOE,MAC1C2F,EAAcH,EAAS1F,EAAOC,IAAMD,EAAOG,OAC3C0C,GACIT,EAAGwD,EAAa,EAChBvD,EAAGwD,EAAc,GAErBC,EAAY,GACZC,EAAmB,GACnBrE,EAAOsE,EAAEC,YACLvE,GACCR,EAAuBC,IACvB,MAAO,SAEZ+E,EAAaF,EAAEG,QAAQzE,EAAM3B,GAC7BqG,EAAkBJ,EAAEK,KAAKH,GACzBI,EAAkBN,EAAEO,QAAQ7E,EAAM3B,GAClCyG,KACAC,EAAiBjG,EAAYQ,EAAqB,EAClD0F,EAAiB,EAAIzD,KAAK0D,IAAI1D,KAAK2D,GAAKR,GACpCK,EACJI,IACKzE,EAAG,EAAGC,EAAG,IACTD,EAAGsE,EAAiB,EAAGrE,EAAG,IAC1BD,EAAGsE,EAAgBrE,EAAG,IAE3ByE,IACK1E,EAAG,EAAGC,EAAG,IACTD,EAAGsE,EAAiB,EAAGrE,GAAIrB,IAC3BoB,EAAGsE,EAAgBrE,EAAG,IAI3B0E,EAAY,CAChBf,GAAEtD,QAAQwD,EAAY,SAASc,EAAQC,GACnC,GAAIC,GAAWH,EAAYhB,EACvBoB,EAAUD,EAAWF,EAASlB,EAAY,IAE9CU,GAAaS,IACTG,aAAcL,EACd1F,MAAOf,GAAGe,MAAMgG,UACXC,OAAOtB,EAAE/D,IAAIqE,EAAgBW,GAAa,SAC1ClF,MACGzB,GAAGyB,MACCmF,EACAC,GACCA,EAAUD,GAAYF,KAKvCD,EAAYI,EAAUpB,GAK1B,IAKIwB,GALAC,EAAUxB,EAAEyB,MAAM/F,GACbO,IAAI,SAASU,GAAK,MAAOA,GAAE5C,KAC3B2H,OACAC,QACLC,EAAe9B,EAAY,EAE3BzC,KACAN,KAEA8E,EAAMvH,GAAGwH,OAAOD,MACfF,MAAM,WAAa,MAAO,KAE3BI,EAAMzH,GAAG0H,IAAID,MACZE,YAAY,GACZC,YAAY1H,GAEb2H,EAAY7H,GAAG0H,IAAID,MAClBE,YAAYxH,GACZ2H,SAAS1H,GACTwH,YAAY1H,GAEb6H,EAAU/H,GAAG0H,IAAID,MAChBE,YAAYzH,GACZ4H,SAASxH,GACTsH,YAAY1H,EAAYQ,GAGzBsH,EAAyBhI,GAAG0H,IAAIO,OAC/BnG,EAAE,SAASO,GAAK,MAAOA,GAAEP,IACzBC,EAAE,SAASM,GAAK,MAAO6F,IAAa7F,EAAEN,KACtCoG,YAAY,UAGbC,EAAoBpI,GAAG0H,IAAIO,OAC1BnG,EAAE,SAASO,GAAK,MAAOA,GAAEP,IACzBC,EAAE,SAASM,GAAK,MAAOA,GAAEN,IACzBoG,YAAY,SAEbtD,EAAQ7E,GAAGwH,OAAO3C,QACjBwD,QAAQ7H,GACR8H,SAAS7H,GACT8H,OAAOhI,GACPwF,MAAMb,EAAOE,IAGdoD,EAASxI,GAAGyI,KAAK1H,QACZiG,QACGhH,GAAG0I,IAAItH,EAAM,SAASiB,GAAK,MAAOA,GAAEsG,YACpC3I,GAAG4I,IAAIxH,EAAM,SAASiB,GAAK,MAAOA,GAAEwG,eAEvCpH,OAAO/B,EAAOI,KAAMwF,IACpBwD,OAELC,EAAQ/I,GAAG0H,IAAIsB,OACdjI,MAAMyH,GACNS,OAAO,UAERf,GAAelI,GAAGe,MAAMgG,UACvBC,OAAOE,GACPzF,MACGiE,EAAE/D,IACEuE,EACA,SAAS7D,GACL,MAAOA,GAAEyE,gBAKrBY,GAAM3C,EAAUmE,OAAO,OACtBhG,KAAK,QAASgC,GACdhC,KAAK,SAAUkC,GACf+D,MAAM,WAAY,WAGnBC,GAAe1B,GAAIwB,OAAO,KACzBG,SAASC,SAAU,GAExBF,IAAaF,OAAO,KACfhG,KAAK,YAAa,cAAgB,EAAGqC,GAAe,KACpD8D,SAASE,SAAU,IACnBC,KAAKT,EAEUK,IAAaF,OAAO,KACnCO,UAAU,kBACVrI,KAAK8F,GACLsC,KAAK,SAASE,GACXA,EAAOC,QAAQT,OAAO,QACjBG,SAASO,gBAAiB,IAC1B1G,MACGb,EAAG,SAASA,GACR,MAAO2F,KACFlG,EAAGpC,EAAOI,KAAMiC,EAAGM,IACnBP,EAAGpC,EAAOI,KAAMiC,EAAGM,QAI/B8G,OACGU,OAAQ,SAASxH,GACb,MAAOvB,GAAYuB,EAAE5C,KAEzBqK,eAAgB,MAChBC,QAAS,MAKzBX,IAAaF,OAAO,KACfG,SAASW,eAAgB,IACzB9G,KAAK,YAAa,cACd,EAAGqC,EAAc7F,EAAOC,IAAMD,EAAOG,QAC1C,KACCqJ,OAAO,QACPe,KAAK,wCAGKvC,IAAIwB,OAAO,KACrBhG,KAAK,YAAa,cAAgBX,EAAOT,EAAGS,EAAOR,GAAK,KACxD0H,UAAU,WACNrI,KAAKmG,EAAIL,IACTsC,KAAK,SAASE,GACXA,EAAOC,QAAQT,OAAO,QACjBG,SAASa,2BAA4B,IACrChH,KAAK,IAAKuE,KAGdC,GAAIwB,OAAO,KACnBhG,KAAK,YAAa,cAAgBX,EAAOT,EAAGS,EAAOR,GAAK,KACxD0H,UAAU,WACVrI,KAAKmG,EAAIL,IACTsC,KAAK,SAASE,GACXA,EAAOC,QAAQT,OAAO,QACjBG,SAASK,OAAQ,IACjBxG,KAAK,IAAK2E,GACVsB,OACCgB,KAAM,SAEXhJ,KAAK,SAASkB,GACXU,EAAeV,EAAEjB,MAAQC,EAAa4D,MACtCxC,EAAgBJ,EAAEjB,MAAQyG,EAAUuC,SAAS/H,OAW9BqF,GAAIwB,OAAO,KACjChG,KAAK,YAAa,cAAgBX,EAAOT,EAAGS,EAAOR,GAAK,KACxD0H,UAAU,oBACVrI,KAAKmG,EAAIL,IACTsC,KAAK,SAASE,GACX,GAAIW,GAAiBX,EAAOC,QAAQT,OAAO,KACtCG,SAASiB,yBAA0B,GAExCD,GAAenB,OAAO,QACjBG,SAASkB,sBAAuB,IAChCrH,MACGb,EAAG0F,IAENoB,OACGgB,KAAM,UACNJ,QAAS,MAIRrC,GAAIwB,OAAO,KACvBO,UAAU,eACVrI,KAAKmG,EAAIL,IACTsC,KAAK,SAASE,GACX,GAAIc,GAAYd,EAAOC,QAAQT,OAAO,KACjCG,SAASoB,iBAAkB,IAC3BvH,MACGwH,UAAW,cACPnI,EAAOT,EAAIsE,EAAiB,EAC5B7D,EAAOR,EAAI7B,GACX,MAEXgJ,OAAO,KACHG,SAASsB,cAAe,IACxBzH,MACGwH,UAAW,SAASrI,EAAGT,GACnB,MAAO,WAEEA,GAAK,IAAMkE,GACP,IAAMA,EAAkB,EAC7BM,EAAiB,EACjBlG,GAEJ,OAKZ+J,EAAOO,EAAUtB,OAAO,QACvBG,SAASuB,eAAgB,IACzB1H,MACG2H,GAAInK,EAAqB,EAAI,GAGrC8J,GAAUtB,OAAO,QACZG,SAASyB,gBAAiB,IAC1B3B,OACGgB,KAAQ,SAEXjH,MACGb,EAAG+F,EAAkB5B,GACrBuE,GAAI,SAAS1I,EAAGT,GAAK,MAAO,OAASA,KAG7CqI,EAAKf,OAAO,YACPG,SAAS2B,YAAa,IACtB9H,MACG+H,YAAe,MACfC,aAAc,SAAS7I,EAAGT,GACtB,MAAO,QAAUA,KAGxBuH,OACGgC,cAAe,WAElBjC,OAAO,SACPG,SAAS+B,mBAAoB,IAC7BjC,OACGkC,YAAa,OACblB,KAAQ,QACRJ,QAAW,MAEdE,KAAK,SAAS5H,GAAK,MAAOA,GAAEjB,QAIzCA,GAAKgB,QAAQ,SAASC,GAClB,GAAI+H,GAAW3H,EAAgBJ,EAAE5C,GACjC4C,GAAEP,EAAIsI,EAAS,GAAK7H,EAAOT,EAC3BO,EAAEN,EAAIqI,EAAS,GAAK7H,EAAOR,EAC3BM,EAAE2B,OAASsD,IAGfzC,EACGyG,MAAMlK,GACNmK,GAAG,OAAQvJ,GACXwJ,OAEH,IAAIxI,IAAO0E,GAAI+B,UAAU,SACpBrI,KAAKA,GACLoI,KAAK,SAASxG,GA8BX,QAASyI,GAAWpJ,GAChB,GAAIqJ,GAAU1L,GAAGgF,OAAO,IAAMU,EAAEiG,UAAUtJ,EAAEuJ,OAExCC,EAAkB5E,EACdA,EAAa7F,OAAO,KAAOsK,EAAQtK,OAAO,IAC1C,CAEJ6F,IACAA,EAAakC,OAAQU,OAAQ,OAG5BgC,EAQD5E,EAAe,MAPfA,EAAeyE,EAEfzE,EAAakC,OACTU,OAAU,QACVC,eAAgB,SAO5B,QAASgC,GAAUzJ,GACf,GAAI0J,GAAa/L,GAAGgF,OAAOC,KACS,OAAhC8G,EAAW5C,MAAM,aACjBnJ,GAAGgF,OAAOC,MAAMkE,OAAQY,QAAS,KACjChK,EAAWiM,cAAc3J,IAIjC,QAAS4J,GAAS5J,GACd,GAAI0J,GAAa/L,GAAGgF,OAAOC,KACS,OAAhC8G,EAAW5C,MAAM,aACjB4C,EAAW5C,OAAQY,QAAS,IAC5BhK,EAAWmM,aAAa7J,IAhEhCW,EAAK2G,QAAQT,OAAO,QACnBG,SAASrG,KAAM,IACXE,MACG6H,GAAI,SAAS1I,GACT,MAAOqD,GAAEiG,UAAUtJ,EAAEuJ,SAG5BzC,OACGY,QAAS,EACTI,KAAM,SAAS9H,GACX,MAAOvB,GAAYuB,EAAE5C,OAIjCuD,EAAKmJ,aACAC,SAAS,KACTlJ,MACGgC,MAAOM,EACPJ,OAAQI,EACR6G,GAAI7G,EAAY,EAChB8G,GAAI9G,EAAY,IAEnB2D,MAAM,UAAW,GAEtBpJ,EAAWwL,GAAG,yBAA0BE,GAExCzI,EAAKuI,GAAG,YAAaO,GACrB9I,EAAKuI,GAAG,WAAYU,KAyCvBzC,KAAK3E,EAAM0H,KAgFhBxM,GAAWwL,GAAG,aAAc,WAoFxB,QAASiB,KACL,MAAO,UAASnK,EAAGT,EAAG6K,GAClB,MAAOzM,IAAGmI,YAAYsE,EAAGrE,EAAkB5B,KArFnD,GAAIkG,GAAK3H,EAAUoH,aAAaC,SAAS,IAGzCM,GAAGjD,UAAU,SAASvG,MAAMgC,MAAOM,IAGnCkH,EAAGjD,UAAU,kBACRvG,MACGb,EAAG,SAASA,GACR,MAAO2F,KACFlG,EAAGpC,EAAOI,KAAMiC,EAAGM,IACnBP,EAAGpC,EAAOI,KAAMiC,EAAGM,QAMpCqK,EAAGjD,UAAU,aAAaN,OAAOY,QAAS,GAE1C,IAAI4C,GAAKD,EAAGP,aAAaC,SAAS,IAGlCO,GAAGlD,UAAU,SACRvG,MACGpB,EAAG,SAASO,GAAK,MAAOA,GAAEP,GAC1BC,EAAG,SAASM,GAAK,MAAOA,GAAEN,KAIlC4K,EAAGxL,KAAK,MAAO,WACX6B,GAAKwG,KAAK3E,EAAM0H,MAChB1H,EAAM2G,SAGV,IAAIoB,GAAKD,EAAGR,aACHU,MAAM,SAASxK,EAAGT,GACf,MAAW,IAAJA,IAEViL,MAAM,KACNT,SAAS,IAGlBQ,GAAGnD,UAAU,mBACRvG,MACGwH,UAAW,cACPnI,EAAOT,EAAIsE,EAAiB,EAC5B7D,EAAOR,EAAI7B,GACX,MAGZ0M,EAAGnD,UAAU,gBACRvG,MACGwH,UAAW,SAASrI,EAAGT,GACnB,MAAO,WAEEA,GAAK,IAAMkE,GACP,IAAMA,EAAkB,EAC7BM,EAAiB,EACjBlG,GAEJ,MAKhB,IAAI4M,GAAKF,EAAGT,aAAaU,MAAM,MAC1BT,SAAS,IAGdU,GAAGrD,UAAU,cACRvG,MAAM+H,YAAe,QAE1B6B,EAAGrD,UAAU,cACRN,OAAQgC,cAAe,WAG5B2B,EAAGrD,UAAU,iBACRvG,MAAM2H,GAAInK,EAAqB,EAAI,IAGxCoM,EAAGrD,UAAU,kBACRsD,UAAU,IAAKP,IASpB,IAAIQ,GAAKF,EAAGX,YAGZa,GAAGvD,UAAU,mBACRvG,MACGwH,UAAW,cACPnI,EAAOT,EAAIsE,EAAiB,EAC5B7D,EAAOR,EAAI7B,GACX,MAKZ8M,EAAGvD,UAAU,oBACRA,UAAU,QACVN,OAAOY,QAAS,IAGrBiD,EAAGvD,UAAU,sBAAsBN,OAAOY,QAAS,IAGnDiD,EAAGvD,UAAU,qBACRN,OAAOgB,KAAM,YAItBpK,EAAWwL,GAAG,eAAgB,WAoC1B,QAAS0B,KACLpI,EAAMC,OACN9B,GAAKwG,KAAK0D,IAGd,QAASC,KACLpI,EAAU0E,UAAU,oBACfA,UAAU,QAAQ0C,aAClBhD,MAAM,UAAW,GAG1B,QAASiE,KACLrI,EAAU0E,UAAU,sBAAsB0C,aACrChD,MAAM,UAAW,GAG1B,QAASkE,KACLtI,EAAU0E,UAAU,qBAAqB0C,aACpChD,OACGgB,KAAM,SAAS9H,GAAK,MAAOvB,GAAYuB,EAAEjB,SAIrD,QAASkM,KACLvI,EAAU0E,UAAU,mBAAmB0C,aAClCC,SAAS,KACTlJ,MACGwH,UAAW,SAASrI,GAChB,MAAO,cACPE,EAAOT,EACPoE,EAAa7D,EAAEjB,MAAM0F,cACjB,OAIpB,QAASyG,KACLxI,EAAU0E,UAAU,gBAAgB0C,aAC/BjJ,MACGwH,UAAW,WACP,MAAO,eAKvB,QAAS8C,KAIL,QAASC,KACL,MAAO,UAASpL,EAAGT,EAAG6K,GAClB,MAAOzM,IAAGmI,YAAYsE,EAClBrE,EAAkB7B,KAN9BxB,EAAU0E,UAAU,kBAAkB0C,aACjCY,UAAU,IAAKU,KAWxB,QAASC,KACL3I,EAAU0E,UAAU,cAAc0C,aAC7BhD,OAAOgC,cAAe,UAE3BpG,EAAU0E,UAAU,cAAc0C,aAC7BjJ,MAAM+H,YAAe,OAE1BlG,EAAU0E,UAAU,iBAAiB0C,aAChCjJ,MAAM2H,GAAI,KAGnB,QAAS8C,KACL5I,EAAU0E,UAAU,mBAAmB0C,aAClCC,SAAS,KACTlJ,MACGwH,UAAW,SAASrI,GAChB,MAAO,cACP3C,EAAOI,KACPoG,EAAa7D,EAAEjB,MAAM0F,cACjB,OAIpB,QAAS8G,KACL7I,EAAU0E,UAAU,aAAa0C,aAC5BhD,MAAM,UAAW,GAG1B,QAAS0E,KACL7K,GAAKmJ,aACAjJ,MACGpB,EAAG,SAASO,GACR,MAAOmG,GAAOnG,EAAEsG,WAAanD,EAAY,GAE7CzD,EAAG,SAASM,GACR,MAAO6D,GAAa7D,EAAE5C,IACjBsB,MAAMsB,EAAEuJ,SAK7B,QAASkC,KACL/I,EAAU0E,UAAU,kBAAkB0C,aACjCjJ,MACGb,EAAG,SAASA,GACR,MAAO2F,KACFlG,EAAGpC,EAAOI,KAAMiC,EAAGM,IACnBP,EAAGwD,EAAYvD,EAAGM,QAMvC,QAAS0L,KACL/K,GAAKmJ,aACAjJ,MACGgC,MAAO,SAAS7C,GACZ,MAAOmG,GAAOnG,EAAEwG,YACZL,EAAOnG,EAAEsG,WACTnD,KAvJpByH,IAEAjN,GAAGmM,aACF6B,KAAK,UACL7M,KAAK,WACFgM,IACAC,IACAC,MAIHlB,aACAC,SAAS,KACTjL,KAAK,WACFmM,IACAC,IACAC,IACAE,MAEHvM,KAAK,MAAO,WACTwM,MAEHxB,aACAU,MAAM,MACNT,SAAS,KACTjL,KAAK,WACF0M,MAEH1M,KAAK,MAAO,WACTyM,IACAE,IACAC,QA+HRhO,EAAWwL,GAAG,eAAgB,SAAS0C,GAUnC,QAASC,GAAS7L,GACd,IAAK8L,IAAqB,CACtB,GAAIC,IAAU,EACVC,IA+DJ,OA7DA3I,GAAE4I,MAAML,EAAS,SAASM,EAAYC,GAElC,GAAmB,WAAfA,IACK9I,EAAE+I,QAAQF,GAIX,GAHAF,EAAcG,IAAc,EAGT,QAAfA,EAAsB,CACtB,GAAIE,GACAC,KAAKC,UAAUlJ,EAAEmJ,OAAOxM,IAAIyM,aAEhC,IAAsC,KAAlCJ,EAAUK,QAAQR,GAEd,YADAF,EAAcG,IAAc,OAIjC,CACH,GAAIQ,GAAUtJ,EAAEuJ,KAAKV,EAAY,SAASW,GAEtC,MAAIxJ,GAAEyJ,QAAQ9M,EAAEmM,IACM,UAAdU,EACOxJ,EAAEuJ,KAAK5M,EAAEmM,GACZ,SAASnH,GACL,MAAO3B,GAAEuJ,KAAKhB,EAAQmB,OAClB,SAASC,GACL,MAAOhI,KAAUgI,MAK9B3J,EAAEuJ,KAAK5M,EAAEmM,GACZ,SAASnH,GACL,MAC4B,KADrBA,EAAMyH,cACRC,QAAQG,KAIP,UAAdA,EACOxJ,EAAEuJ,KAAKhB,EAAQmB,OAAQ,SAASC,GACnC,MAAOhN,GAAEmM,GAAYM,gBAAkBO,IAKf,KADzBhN,EAAEmM,GAAYM,cACZC,QAAQG,IAGrB,IAAIF,EAEA,YADAX,EAAcG,IAAc,MAQhDJ,GAAW1I,EAAE4J,MAAM5J,EAAEmJ,OAAOR,GACxB,SAASkB,GACL,MAAOA,KAGRnB,EAAU,EAAI,EAGzB,MAAO,GAGX,QAASD,KACL,MAAOzI,GAAE4J,MAAMrB,EAAS,SAASO,GAC7B,MAAO9I,GAAE+I,QAAQD,KAlFzBxL,GAAKmJ,aAAahD,OACdY,QAAS,SAAS1H,GAAK,MAAO6L,GAAS7L,IACvCmN,iBAAkB,SAAUnN,GACxB,MAAO6L,GAAS7L,GAAK,MAAQ,WAqFzC,IAAI6K,IAAelN,GAAGyP,SAASlD,OAC1BhB,GAAG,YAAa3G,KAsC7B,OA9BA3D,GAAMvB,OAAS,SAAS2H,GACpB,MAAKqI,WAAUnM,QACf7D,EAAS2H,EACFpG,GAFuBvB,GAKlCuB,EAAMxB,gBAAkB,SAAS4H,GAC7B,MAAKqI,WAAUnM,QACf9D,EAAkB4H,EACXpG,GAFuBxB,GAKlCwB,EAAMf,UAAY,SAASmH,GACvB,MAAKqI,WAAUnM,QACfrD,EAAYmH,EACLpG,GAFuBf,GAKlCe,EAAMlB,WAAa,SAASsH,GACxB,MAAKqI,WAAUnM,QACfxD,EAAasH,EACNpG,GAFuBlB,GAKlCkB,EAAMH,YAAc,SAASuG,GACzB,MAAKqI,WAAUnM,QACfzC,EAAcuG,EACPpG,GAFuBH,GAK3BG","file":"chart.min.js","sourcesContent":["/*\r\n    File containing the chart generator.\r\n */\r\n\r\nvar Chart = function() {\r\n    var margin = {top: 20, right: 10, bottom: 20, left: 10},\r\n        dispatcher = d3.dispatch(),\r\n        regionAttribute,\r\n        pieRadius = 225,\r\n        bufferInnerRadius = 100,\r\n        bufferPadAngle = 0.1,\r\n        nudge = 1,\r\n        textArcPadAngle = 0.005,\r\n        defaultCharge = function(d) {\r\n            return -0;\r\n        },\r\n        defaultGravity = 0.02,\r\n        defaultFriction = 0,\r\n        textRegionDistance = 30,\r\n        circlePadding = 5,\r\n        firstSortedByVariable = 'domain',\r\n        secondSortedByVariable = 'startDate',\r\n        colorScheme = d3.scale.category10();\r\n\r\n    var chart = function(selection) {\r\n        selection.each(function(data) {\r\n            // General Variables\r\n            var container = d3.select(this),\r\n                width = this.clientWidth,\r\n                height = this.clientHeight,\r\n                chartWidth = width - margin.left - margin.right,\r\n                chartHeight = height - margin.top - margin.bottom,\r\n                center = {\r\n                    x: chartWidth / 2,\r\n                    y: chartHeight / 2\r\n                },\r\n                barHeight = 15,\r\n                barToTextPadding = 20,\r\n                data = _.sortByOrder(\r\n                    data,\r\n                    [firstSortedByVariable, secondSortedByVariable],\r\n                    ['asc', 'desc']\r\n                ),\r\n                barRegions = _.countBy(data, regionAttribute),\r\n                numberOfRegions = _.size(barRegions),\r\n                groupedByRegion = _.groupBy(data, regionAttribute),\r\n                yScalePoints = {},\r\n                textPathRadius = pieRadius + textRegionDistance / 2,\r\n                pathLineLength = 2 * Math.sin(Math.PI / numberOfRegions) *\r\n                    textPathRadius,\r\n                pathLine = [\r\n                    {x: 0, y: 0},\r\n                    {x: pathLineLength / 2, y: 0},\r\n                    {x: pathLineLength, y: 0}\r\n                ],\r\n                pathCurve = [\r\n                    {x: 0, y: 0},\r\n                    {x: pathLineLength / 2, y: -textRegionDistance},\r\n                    {x: pathLineLength, y: 0}\r\n                ];\r\n\r\n            // Calculate bar and text locations\r\n            var yPosition = 0;\r\n            _.forEach(barRegions, function(number, regionName) {\r\n                var firstBar = yPosition + barToTextPadding,\r\n                    lastBar = firstBar + number * barHeight * 1.05;\r\n\r\n                yScalePoints[regionName] = {\r\n                    textLocation: yPosition,\r\n                    scale: d3.scale.ordinal()\r\n                        .domain(_.map(groupedByRegion[regionName], 'name'))\r\n                        .range(\r\n                            d3.range(\r\n                                firstBar,\r\n                                lastBar,\r\n                                (lastBar - firstBar) / number\r\n                            )\r\n                        )\r\n                };\r\n\r\n                yPosition = lastBar + barToTextPadding;\r\n            });\r\n\r\n\r\n            // Force layout variables\r\n            var regions = _.chain(data)\r\n                    .map(function(d) { return d[regionAttribute]; })\r\n                    .uniq()\r\n                    .value(),\r\n                circleRadius = barHeight / 2,\r\n                selectedNode,\r\n                regionPolygons = [],\r\n                regionCentroids = [];\r\n\r\n            var pie = d3.layout.pie()\r\n                .value(function(d) {return 1; });\r\n\r\n            var arc = d3.svg.arc()\r\n                .innerRadius(0)\r\n                .outerRadius(pieRadius);\r\n\r\n            var arcRegion = d3.svg.arc()\r\n                .innerRadius(bufferInnerRadius)\r\n                .padAngle(bufferPadAngle)\r\n                .outerRadius(pieRadius);\r\n\r\n            var arcText = d3.svg.arc()\r\n                .innerRadius(pieRadius)\r\n                .padAngle(textArcPadAngle)\r\n                .outerRadius(pieRadius + textRegionDistance);\r\n\r\n            // Lines drawn to separate region attribute lines on timeline\r\n            var timelineLinesGenerator = d3.svg.line()\r\n                .x(function(d) { return d.x; })\r\n                .y(function(d) { return regionYScale(d.y); })\r\n                .interpolate(\"linear\");\r\n\r\n            // Path generator for text\r\n            var textLineGenerator = d3.svg.line()\r\n                .x(function(d) { return d.x; })\r\n                .y(function(d) { return d.y; })\r\n                .interpolate(\"basis\");\r\n\r\n            var force = d3.layout.force()\r\n                .gravity(defaultGravity)\r\n                .friction(defaultFriction)\r\n                .charge(defaultCharge)\r\n                .size([width, height]);\r\n\r\n            // Barchart layout variables\r\n            var xScale = d3.time.scale()\r\n                    .domain([\r\n                        d3.min(data, function(d) { return d.startDate; }),\r\n                        d3.max(data, function(d) { return d.lastUpdate; })\r\n                    ])\r\n                    .range([margin.left, chartWidth])\r\n                    .nice();\r\n\r\n            var xAxis = d3.svg.axis()\r\n                .scale(xScale)\r\n                .orient(\"bottom\");\r\n\r\n            var regionYScale = d3.scale.ordinal()\r\n                .domain(regions)\r\n                .range(\r\n                    _.map(\r\n                        yScalePoints,\r\n                        function(d) {\r\n                            return d.textLocation;\r\n                        }\r\n                    )\r\n                );\r\n\r\n            var svg = container.append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .style(\"overflow\", \"visible\");\r\n\r\n            // Barchart components\r\n            var barContainer = svg.append(\"g\")\r\n                .classed({timeline: 1});\r\n\r\n            barContainer.append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + [0, chartHeight] + \")\")\r\n                .classed({\"x-axis\": 1})\r\n                .call(xAxis);\r\n\r\n            var timelineLines = barContainer.append(\"g\")\r\n                .selectAll(\".timeline-line\")\r\n                .data(regions)\r\n                .call(function(region) {\r\n                    region.enter().append(\"path\")\r\n                        .classed({\"timeline-line\": 1})\r\n                        .attr({\r\n                            d: function(d, i) {\r\n                                return timelineLinesGenerator([\r\n                                    {x: margin.left, y: d},\r\n                                    {x: margin.left, y: d}\r\n                                ]);\r\n                            }\r\n                        })\r\n                        .style({\r\n                            stroke: function(d, i) {\r\n                                return colorScheme(d[regionAttribute]);\r\n                            },\r\n                            \"stroke-width\": \"1px\",\r\n                            opacity: 0.4\r\n                        });\r\n                });\r\n\r\n            //TODO: Take out once dates have all been verified\r\n            barContainer.append(\"g\")\r\n                .classed({\"warning-text\": 1})\r\n                .attr(\"transform\", \"translate(\" +\r\n                    [0, chartHeight + margin.top + margin.bottom] +\r\n                \")\")\r\n                .append(\"text\")\r\n                .text(\"* Note: All dates need to be verified\");\r\n\r\n            // Force layout components\r\n            var regionBg = svg.append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + [center.x, center.y] + \")\")\r\n                .selectAll(\".region\")\r\n                    .data(pie(regions))\r\n                    .call(function(region) {\r\n                        region.enter().append(\"path\")\r\n                            .classed({\"region region-background\": 1})\r\n                            .attr(\"d\", arc);\r\n                     });\r\n\r\n            var region = svg.append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + [center.x, center.y] + \")\")\r\n                .selectAll(\".region\")\r\n                .data(pie(regions))\r\n                .call(function(region) {\r\n                    region.enter().append(\"path\")\r\n                        .classed({region: 1})\r\n                        .attr(\"d\", arcRegion)\r\n                        .style({\r\n                          fill: \"none\"\r\n                        })\r\n                    .each(function(d) {\r\n                        regionPolygons[d.data] = pathToPoints(this);\r\n                        regionCentroids[d.data] = arcRegion.centroid(d);\r\n                    });\r\n                });\r\n\r\n            function pathToPoints(path) {\r\n                var segs = path.pathSegList;\r\n                return d3.range(segs.numberOfItems - 1).map(function(i) {\r\n                    return [segs.getItem(i).x, segs.getItem(i).y];\r\n                });\r\n            }\r\n\r\n            var textBackgroundRegion = svg.append(\"g\")\r\n                .attr(\"transform\", \"translate(\" + [center.x, center.y] + \")\")\r\n                .selectAll(\".text-background\")\r\n                .data(pie(regions))\r\n                .call(function(region) {\r\n                    var textBackground = region.enter().append(\"g\")\r\n                        .classed({\"region text-background\": 1});\r\n\r\n                    textBackground.append(\"path\")\r\n                        .classed({\"text-background-arc\": 1})\r\n                        .attr({\r\n                            d: arcText,\r\n                        })\r\n                        .style({\r\n                            fill: \"#b5bdc3\",\r\n                            opacity: 1\r\n                        });\r\n            });\r\n\r\n            var textGroups = svg.append(\"g\")\r\n                .selectAll(\".text-group\")\r\n                .data(pie(regions))\r\n                .call(function(region) {\r\n                    var textGroup = region.enter().append(\"g\")\r\n                        .classed({\"text-translate\": 1})\r\n                        .attr({\r\n                            transform: \"translate(\" + [\r\n                                center.x - pathLineLength / 2,\r\n                                center.y - pieRadius\r\n                            ] + \")\"\r\n                        })\r\n                    .append(\"g\")\r\n                        .classed({\"text-rotate\": 1})\r\n                        .attr({\r\n                            transform: function(d, i) {\r\n                                return \"rotate(\" +\r\n                                    [\r\n                                        (i * (360 / numberOfRegions)) +\r\n                                            (360 / numberOfRegions / 2),\r\n                                        pathLineLength / 2,\r\n                                        pieRadius\r\n                                    ] +\r\n                                    \")\";\r\n\r\n                            }\r\n                        });\r\n\r\n                    var text = textGroup.append(\"text\")\r\n                        .classed({\"display-text\": 1})\r\n                        .attr({\r\n                            dy: textRegionDistance / 2 - 3\r\n                        });\r\n\r\n                    textGroup.append(\"path\")\r\n                        .classed({\"path-for-text\": 1})\r\n                        .style({\r\n                            \"fill\": \"none\"\r\n                        })\r\n                        .attr({\r\n                            d: textLineGenerator(pathCurve),\r\n                            id: function(d, i) { return \"path\" + i; }\r\n                        });\r\n\r\n                    text.append(\"textPath\")\r\n                        .classed({\"text-path\": 1})\r\n                        .attr({\r\n                            \"startOffset\": \"50%\",\r\n                            \"xlink:href\": function(d, i) {\r\n                                return \"#path\" + i;\r\n                            }\r\n                        })\r\n                        .style({\r\n                            \"text-anchor\": \"middle\"\r\n                        })\r\n                        .append(\"tspan\")\r\n                        .classed({\"actual-text-path\": 1})\r\n                        .style({\r\n                            \"font-size\": \"12pt\",\r\n                            \"fill\": \"white\",\r\n                            \"opacity\": 0.87,\r\n                        })\r\n                        .text(function(d) { return d.data; });\r\n            });\r\n\r\n            // Start nodes at centroid of their region\r\n            data.forEach(function(d) {\r\n                var centroid = regionCentroids[d[regionAttribute]];\r\n                d.x = centroid[0] + center.x;\r\n                d.y = centroid[1] + center.y;\r\n                d.radius = circleRadius;\r\n            });\r\n\r\n            force\r\n              .nodes(data)\r\n              .on(\"tick\", tick)\r\n              .start();\r\n\r\n            var node = svg.selectAll(\".node\")\r\n                .data(data)\r\n                .call(function(node) {\r\n                    node.enter().append(\"rect\")\r\n                    .classed({node: 1})\r\n                        .attr({\r\n                            id: function(d) {\r\n                                return _.kebabCase(d.name);\r\n                            }\r\n                        })\r\n                        .style({\r\n                            opacity: 0,\r\n                            fill: function(d) {\r\n                                return colorScheme(d[regionAttribute]);\r\n                            }\r\n                        });\r\n\r\n                    node.transition()\r\n                        .duration(750)\r\n                        .attr({\r\n                            width: barHeight,\r\n                            height: barHeight,\r\n                            rx: barHeight / 2,\r\n                            ry: barHeight / 2\r\n                        })\r\n                        .style(\"opacity\", 1);\r\n\r\n                    dispatcher.on(\"selectedNode.highlight\", updateNode);\r\n\r\n                    node.on(\"mouseover\", mouseOver);\r\n                    node.on(\"mouseout\", mouseOut);\r\n\r\n                    function updateNode(d) {\r\n                        var theNode = d3.select(\"#\" + _.kebabCase(d.name));\r\n\r\n                        var clickedSameNode = selectedNode ?\r\n                                selectedNode.data()[0] === theNode.data()[0] :\r\n                                false;\r\n\r\n                        if (selectedNode) {\r\n                            selectedNode.style({ stroke: null });\r\n                        }\r\n\r\n                        if (!clickedSameNode) {\r\n                            selectedNode = theNode;\r\n\r\n                            selectedNode.style({\r\n                                \"stroke\": \"black\",\r\n                                \"stroke-width\": 2 + \"px\"\r\n                            });\r\n                        } else {\r\n                            selectedNode = null;\r\n                        }\r\n                    }\r\n\r\n                    function mouseOver(d) {\r\n                        var thisCircle = d3.select(this);\r\n                        if (thisCircle.style(\"opacity\") !== \"0\") {\r\n                            d3.select(this).style({ opacity: 0.6 });\r\n                            dispatcher.mouseOverNode(d);\r\n                        }\r\n                    }\r\n\r\n                    function mouseOut(d) {\r\n                        var thisCircle = d3.select(this);\r\n                        if (thisCircle.style(\"opacity\") !== \"0\") {\r\n                            thisCircle.style({ opacity: 1 });\r\n                            dispatcher.mouseOutNode(d);\r\n                        }\r\n                    }\r\n                })\r\n                .call(force.drag);\r\n\r\n            function tick(e) {\r\n              var k = 0.1 * e.alpha;\r\n\r\n              data.forEach(function(d) {\r\n                var tx = [d.x - center.x, d.y - center.y],\r\n                  cx = regionCentroids[d[regionAttribute]],\r\n                  dx = Math.sqrt(\r\n                    Math.pow(tx[0] - cx[0], 2),\r\n                    Math.pow(tx[1] - cx[1], 2)\r\n                  );\r\n\r\n                var inPoly = pointInPolygon(tx, regionPolygons[d[regionAttribute]]);\r\n\r\n                if(!inPoly) {\r\n                  d.x += (tx[0] < cx[0] ? 1 : -1) * nudge;\r\n                  d.y += (tx[1] < cx[1] ? 1 : -1) * nudge;\r\n                } else {\r\n                  d.x += (cx[0] - tx[0]) * k;\r\n                  d.y += (cx[1] - tx[1]) * k;\r\n                }\r\n              });\r\n\r\n              node.each(collide(0.5))\r\n                .attr(\"x\", function(d) { return d.x; })\r\n                .attr(\"y\", function(d) { return d.y; });\r\n            }\r\n\r\n            // from https://github.com/substack/point-in-polygon\r\n            // ray-casting algorithm based on\r\n            // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n            function pointInPolygon(point, vs) {\r\n\r\n                var x = point[0], y = point[1];\r\n\r\n                var inside = false;\r\n                for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n                    var xi = vs[i][0], yi = vs[i][1];\r\n                    var xj = vs[j][0], yj = vs[j][1];\r\n\r\n                    var intersect = (\r\n                      ((yi > y) != (yj > y)) &&\r\n                      (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\r\n                    );\r\n                    if (intersect) inside = !inside;\r\n                }\r\n\r\n                return inside;\r\n            }\r\n\r\n            // Resolves collisions between d and all other circles.\r\n            // Taken from http://bl.ocks.org/mbostock/7881887\r\n            function collide(alpha) {\r\n              var quadtree = d3.geom.quadtree(data);\r\n              return function(d) {\r\n                var r = d.radius + circlePadding,\r\n                    nx1 = d.x - r,\r\n                    nx2 = d.x + r,\r\n                    ny1 = d.y - r,\r\n                    ny2 = d.y + r;\r\n                quadtree.visit(function(quad, x1, y1, x2, y2) {\r\n                  if (quad.point && (quad.point !== d)) {\r\n                    var x = d.x - quad.point.x,\r\n                        y = d.y - quad.point.y,\r\n                        l = Math.sqrt(x * x + y * y),\r\n                        r = d.radius + quad.point.radius + circlePadding;\r\n                    if (l < r) {\r\n                      l = (l - r) / l * alpha;\r\n                      d.x -= x *= l;\r\n                      d.y -= y *= l;\r\n                      quad.point.x += x;\r\n                      quad.point.y += y;\r\n                    }\r\n                  }\r\n                  return x1 > nx2 || x2 < nx1 || y1 > ny2 || y2 < ny1;\r\n                });\r\n              };\r\n            }\r\n\r\n            dispatcher.on(\"drawDomain\", function() {\r\n                var t0 = container.transition().duration(500);\r\n\r\n                // Nodes transform to circles\r\n                t0.selectAll(\".node\").attr({width: barHeight});\r\n\r\n                // Timeline divider lines disappear\r\n                t0.selectAll(\".timeline-line\")\r\n                    .attr({\r\n                        d: function(d, i) {\r\n                            return timelineLinesGenerator([\r\n                                {x: margin.left, y: d},\r\n                                {x: margin.left, y: d}\r\n                            ]);\r\n                        },\r\n                    });\r\n\r\n                // Timeline scale is removed\r\n                t0.selectAll(\".timeline\").style({opacity: 0});\r\n\r\n                var t1 = t0.transition().duration(500);\r\n\r\n                // Nodes translate back to original pie position\r\n                t1.selectAll(\".node\")\r\n                    .attr({\r\n                        x: function(d) { return d.x; },\r\n                        y: function(d) { return d.y; }\r\n                    });\r\n\r\n                // Restart the force drag layout\r\n                t1.each(\"end\", function() {\r\n                    node.call(force.drag);\r\n                    force.start();\r\n                });\r\n\r\n                var t2 = t1.transition()\r\n                        .delay(function(d, i) {\r\n                            return i * 50;\r\n                        })\r\n                        .delay(1000)\r\n                        .duration(1000);\r\n\r\n                // Translate 1/2 from origin\r\n                t2.selectAll(\".text-translate\")\r\n                    .attr({\r\n                        transform: \"translate(\" + [\r\n                            center.x - pathLineLength / 2,\r\n                            center.y - pieRadius\r\n                        ] + \")\"\r\n                    });\r\n\r\n                t2.selectAll(\".text-rotate\")\r\n                    .attr({\r\n                        transform: function(d, i) {\r\n                            return \"rotate(\" +\r\n                                [\r\n                                    (i * (360 / numberOfRegions)) +\r\n                                        (360 / numberOfRegions / 2),\r\n                                    pathLineLength / 2,\r\n                                    pieRadius\r\n                                ] +\r\n                                \")\";\r\n                        }\r\n                    });\r\n\r\n\r\n                var t3 = t2.transition().delay(1500)\r\n                    .duration(750);\r\n\r\n                // Position text to fit on curve\r\n                t3.selectAll(\".text-path\")\r\n                    .attr({\"startOffset\": \"50%\"});\r\n\r\n                t3.selectAll(\".text-path\")\r\n                    .style({ \"text-anchor\": \"middle\"});\r\n\r\n\r\n                t3.selectAll(\".display-text\")\r\n                    .attr({dy: textRegionDistance / 2 - 3});\r\n\r\n                // Change line path to curve path\r\n                t3.selectAll(\".path-for-text\")\r\n                    .attrTween(\"d\", arcTransition());\r\n\r\n                function arcTransition() {\r\n                    return function(d, i, a) {\r\n                        return d3.interpolate(a, textLineGenerator(pathCurve));\r\n                    };\r\n                }\r\n\r\n\r\n                var t4 = t3.transition();\r\n\r\n                // Region text is translated to pie position\r\n                t4.selectAll(\".text-translate\")\r\n                    .attr({\r\n                        transform: \"translate(\" + [\r\n                            center.x - pathLineLength / 2,\r\n                            center.y - pieRadius\r\n                        ] + \")\"\r\n                    });\r\n\r\n\r\n                // Show text background color\r\n                t4.selectAll(\".text-background\")\r\n                    .selectAll(\"path\")\r\n                    .style({opacity: 1});\r\n\r\n                // Show the pie slices\r\n                t4.selectAll(\".region-background\").style({opacity: 1});\r\n\r\n                // Change text color to white\r\n                t4.selectAll(\".actual-text-path\")\r\n                    .style({fill: \"white\"});\r\n\r\n            });\r\n\r\n            dispatcher.on(\"drawTimeline\", function() {\r\n                stopForceDrag();\r\n\r\n                d3.transition()\r\n                .ease(\"linear\")\r\n                .each(function() {\r\n                    hideTextBackground();\r\n                    hidePieSlices();\r\n                    fillTextWithColor();\r\n                })/*\r\n                .each(\"end\", function() {\r\n                })*/\r\n                .transition()\r\n                .duration(500)\r\n                .each(function() {\r\n                    intermediateTranslateToOrigin();\r\n                    originRotateText();\r\n                    modifyPathToLine();\r\n                    positionTextToFitOnPath();\r\n                })\r\n                .each(\"end\", function() {\r\n                    translateToOrigin();\r\n                })\r\n                .transition()\r\n                .delay(1500)\r\n                .duration(500)\r\n                .each(function() {\r\n                    moveNodesToTimelinePosition();\r\n                })\r\n                .each(\"end\", function() {\r\n                    showTimeline();\r\n                    extendTimelineLines();\r\n                    extendNodeBars();\r\n                });\r\n\r\n\r\n                function stopForceDrag() {\r\n                    force.stop();\r\n                    node.call(timelineDrag);\r\n                }\r\n\r\n                function hideTextBackground() {\r\n                    container.selectAll(\".text-background\")\r\n                        .selectAll(\"path\").transition()\r\n                        .style(\"opacity\", 0);\r\n                }\r\n\r\n                function hidePieSlices() {\r\n                    container.selectAll(\".region-background\").transition()\r\n                        .style(\"opacity\", 0);\r\n                }\r\n\r\n                function fillTextWithColor() {\r\n                    container.selectAll(\".actual-text-path\").transition()\r\n                        .style({\r\n                            fill: function(d) { return colorScheme(d.data); }\r\n                        });\r\n                }\r\n\r\n                function intermediateTranslateToOrigin() {\r\n                    container.selectAll(\".text-translate\").transition()\r\n                        .duration(1000)\r\n                        .attr({\r\n                            transform: function(d, i) {\r\n                                return \"translate(\" + [\r\n                                center.x,\r\n                                yScalePoints[d.data].textLocation\r\n                                ] + \")\"; }\r\n                        });\r\n                }\r\n\r\n                function originRotateText() {\r\n                    container.selectAll(\".text-rotate\").transition()\r\n                        .attr({\r\n                            transform: function(d, i) {\r\n                                return \"rotate(0)\";\r\n                            }\r\n                        });\r\n                }\r\n\r\n                function modifyPathToLine() {\r\n                    container.selectAll(\".path-for-text\").transition()\r\n                        .attrTween(\"d\", lineTransition());\r\n\r\n                    function lineTransition() {\r\n                        return function(d, i, a) {\r\n                            return d3.interpolate(a,\r\n                                textLineGenerator(pathLine));\r\n                        };\r\n\r\n                    }\r\n                }\r\n\r\n                function positionTextToFitOnPath() {\r\n                    container.selectAll(\".text-path\").transition()\r\n                        .style({\"text-anchor\": \"start\"});\r\n\r\n                    container.selectAll(\".text-path\").transition()\r\n                        .attr({\"startOffset\": \"0%\"});\r\n\r\n                    container.selectAll(\".display-text\").transition()\r\n                        .attr({dy: 16});\r\n                }\r\n\r\n                function translateToOrigin() {\r\n                    container.selectAll(\".text-translate\").transition()\r\n                        .duration(500)\r\n                        .attr({\r\n                            transform: function(d, i) {\r\n                                return \"translate(\" + [\r\n                                margin.left,\r\n                                yScalePoints[d.data].textLocation\r\n                                ] + \")\"; }\r\n                        });\r\n                }\r\n\r\n                function showTimeline() {\r\n                    container.selectAll(\".timeline\").transition()\r\n                        .style(\"opacity\", 1);\r\n                }\r\n\r\n                function moveNodesToTimelinePosition() {\r\n                    node.transition()\r\n                        .attr({\r\n                            x: function(d) {\r\n                                return xScale(d.startDate) - barHeight / 2;\r\n                            },\r\n                            y: function(d, i) {\r\n                                return yScalePoints[d[regionAttribute]]\r\n                                    .scale(d.name);\r\n                            }\r\n                        });\r\n                }\r\n\r\n                function extendTimelineLines() {\r\n                    container.selectAll(\".timeline-line\").transition()\r\n                        .attr({\r\n                            d: function(d, i) {\r\n                                return timelineLinesGenerator([\r\n                                    {x: margin.left, y: d},\r\n                                    {x: chartWidth, y: d}\r\n                                ]);\r\n                            },\r\n                        });\r\n                }\r\n\r\n                function extendNodeBars() {\r\n                    node.transition()\r\n                        .attr({\r\n                            width: function(d) {\r\n                                return xScale(d.lastUpdate) -\r\n                                    xScale(d.startDate) +\r\n                                    barHeight;\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n\r\n            dispatcher.on(\"filterUpdate\", function(filters) {\r\n\r\n                node.transition().style({\r\n                    opacity: function(d) { return viewable(d); },\r\n                    \"pointer-events\": function (d) {\r\n                        return viewable(d) ? \"all\" : \"none\";\r\n                    }\r\n                });\r\n\r\n\r\n                function viewable(d) {\r\n                    if (!filterListIsEmpty()) {\r\n                        var isMuted = true,\r\n                            dataHasFilter = {};\r\n\r\n                        _.forIn(filters, function(keptValues, filterType) {\r\n\r\n                            if (filterType !== 'others') {\r\n                                if (!_.isEmpty(keptValues)) {\r\n                                    dataHasFilter[filterType] = false;\r\n\r\n                                    // keyword filter\r\n                                    if (filterType === \"all\") {\r\n                                        var allValues =\r\n                                            JSON.stringify(_.values(d)).toLowerCase();\r\n\r\n                                        if (allValues.indexOf(keptValues) !== -1) {\r\n                                                dataHasFilter[filterType] = true;\r\n                                                return;\r\n                                        }\r\n\r\n                                    } else {\r\n                                        var isMatch = _.some(keptValues, function(keptValue) {\r\n\r\n                                            if (_.isArray(d[filterType])) {\r\n                                                if (keptValue === 'other') {\r\n                                                    return _.some(d[filterType],\r\n                                                        function(value) {\r\n                                                            return _.some(filters.others,\r\n                                                                function(other) {\r\n                                                                    return value === other;\r\n                                                            });\r\n                                                        });\r\n                                                }\r\n\r\n                                                return _.some(d[filterType],\r\n                                                    function(value) {\r\n                                                        return value.toLowerCase()\r\n                                                            .indexOf(keptValue) !== -1;\r\n                                                    });\r\n                                            }\r\n\r\n                                            if (keptValue === 'other') {\r\n                                                return _.some(filters.others, function(other) {\r\n                                                    return d[filterType].toLowerCase() === other;\r\n                                                });\r\n                                            }\r\n\r\n                                            return d[filterType].toLowerCase()\r\n                                                    .indexOf(keptValue) !== -1;\r\n                                        });\r\n\r\n                                        if (isMatch) {\r\n                                            dataHasFilter[filterType] = true;\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        isMuted = !_.every(_.values(dataHasFilter),\r\n                            function(isTrue) {\r\n                                return isTrue;\r\n                        });\r\n\r\n                        return isMuted ? 0 : 1;\r\n                    }\r\n\r\n                    return 1;\r\n                }\r\n\r\n                function filterListIsEmpty() {\r\n                    return _.every(filters, function(filterType) {\r\n                        return _.isEmpty(filterType);\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n            var timelineDrag = d3.behavior.drag()\r\n                .on(\"dragstart\", dragstart);\r\n\r\n            function dragstart(d) {\r\n                force.stop();\r\n            }\r\n        });\r\n    };\r\n\r\n    chart.margin = function(value) {\r\n        if (!arguments.length) return margin;\r\n        margin = value;\r\n        return chart;\r\n    };\r\n\r\n    chart.regionAttribute = function(value) {\r\n        if (!arguments.length) return regionAttribute;\r\n        regionAttribute = value;\r\n        return chart;\r\n    };\r\n\r\n    chart.pieRadius = function(value) {\r\n        if (!arguments.length) return pieRadius;\r\n        pieRadius = value;\r\n        return chart;\r\n    };\r\n\r\n    chart.dispatcher = function(value) {\r\n        if (!arguments.length) return dispatcher;\r\n        dispatcher = value;\r\n        return chart;\r\n    };\r\n\r\n    chart.colorScheme = function(value) {\r\n        if (!arguments.length) return colorScheme;\r\n        colorScheme = value;\r\n        return chart;\r\n    };\r\n\r\n    return chart;\r\n};"],"sourceRoot":"/source/"}